# Text File Operations

Python applications have access to their surrounding environment, including any files that may exist there.

In this chapter we will practice reading and writing text files, using the [`open` function](https://docs.python.org/3/library/functions.html#open).

For these example, let's consider the following textual message, which in this case is a multiline string:

```{python}
message = """
Hello World!

This is a message.
"""

print(type(message))
print(message)
```


## Writing Files

We can use the `open` function in "writing" mode (`"w"`) to write text contents to file:

```{python}
filepath = "my_message.txt"

with open(filepath, "w") as file:
    file.write(message)
```

Let's break this down.

When using the `open` function, we pass the name (or the full path) of the file as the first parameter, then the "mode", or the way in which we intend to open the file (i.e. reading or writing), as the second parameter.

:::{.callout-note}
FYI: the `with` statement creates a **context manager** that allows us to open the file without explicitly closing it. The file will be closed when the indentation level resets back to the left margin.
:::

:::{.callout-note}
Here, `file` is an alias variable referencing the file object (technically a `TextIOWrapper` datatype). You can choose any variable name you like instead, just reference that same variable name inside the scope of the context manager when reading with the file's `read` method, or writing with the file's `write` method.
:::

## Reading Files

To verify the contents got written to file, let's read the same file.

Here we are use the `open` function in "reader" mode (`"r"`) to read the contents of the text file:

```{python}
with open(filepath, "r") as file:
    contents = file.read()
    print(contents)
```

## Removing Files

As we've seen, we can use the [`os` module](../python-modules/os.ipynb) to detect and delete files:

```{python}
import os

print(os.path.exists(filepath))
```

```{python}
os.remove(filepath)

print(os.path.exists(filepath))
```
